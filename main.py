import os
import time

from dotenv import load_dotenv
import requests
from requests.exceptions import RequestException
import telebot
from telebot import types


load_dotenv()
telegram_token = os.getenv('telegram_token')
weather_token = os.getenv('weather_token')

bot = telebot.TeleBot(telegram_token)
URL = 'http://api.openweathermap.org/data/2.5/forecast'


def get_weather(city):
    weather_parameters = {
            'q': city,
            'appid': weather_token,
            'units': 'metric',
            'lang': 'ua'
        }

    try:
        response = requests.get(url=URL, params=weather_parameters)

        temp = round(response.json()['list'][0]['main']['temp'])
        feels_like = round(response.json()['list'][0]['main']['feels_like'])
        humidity = response.json()['list'][0]['main']['humidity']
        description = response.json()['list'][0]['weather'][0]['description'].capitalize()
        wind_speed = round(response.json()['list'][0]['wind']['speed'])
        time = response.json()['list'][0]['dt_txt'].split(' ')[1].split(':')[0]

        if feels_like < -25:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ö—Ä–∞—â–µ —Å–∏–¥–∏ –≤–¥–æ–º–∞ —É–º–∞–ª—è—é... üè† –ù—É, —á–∏ –¥—É–∂–µ —Ç–µ–ø–ª–æ –æ–¥—è–≥–∞–π—Å—è!'
        elif -25 <= feels_like < -20:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ —Ç–µ—Ä–º–æ–±—ñ–ª–∏–∑–Ω—É! ‚ùÑÔ∏è –ü–ø—Ü –∑–∏–º–∞ –ª—é—Ç–∞—è üå®...'
        elif -20 <= feels_like < -15:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ú—Å—å—î, –¥—ñ—Å—Ç–∞–≤–∞–π –ø—É—Ö–æ–≤–∏–∫ —ñ —Ç–µ–ø–ª–µ –≤–∑—É—Ç—Ç—è ‚ùÑÔ∏è'
        elif -15 <= feels_like < -10:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –¢–µ–ø–ª–∏–π —à–∞—Ä—Ñ üß£ —Ç–∞ —Å–≤–µ—Ç—Ä –∑–∞–º—ñ–Ω–∏—Ç—å –∫—Ä—É–∂–∫—É –≥–∞—Ä—è—á–æ—ó –∫–∞–≤–∏ ‚òïÔ∏è.'
        elif -10 <= feels_like < -5:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ë—Ä—Ä—Ä –∑–∏–º–Ω–æ... üß¶ –ù–µ –∑–∞–±—É–¥—å —Ä—É–∫–∞–≤–∏—á–∫–∏ —Ç–∞ —à–∞–ø–∫—É!'
        elif -5 <= feels_like < 0:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –¢–µ–ø–ª–∞ –∫—É—Ä—Ç–∫–∞ —Ç–∞ —Å—Ç—ñ–ª—å–æ–≤–∏–π —à–∞—Ä—Ñ —Å—å–æ–≥–æ–¥–Ω—ñ —è–∫ –Ω—ñ–∫–æ–ª–∏ –¥–æ —Ä–µ—á—ñ!üß£'
        elif 0 <= feels_like < 5:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –£–ª—é–±–ª–µ–Ω–∏–π —Å–≤—ñ—Ç—à–æ—Ç —á–∏ —Ç–µ–ø–ª–∏–π —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ—Å—Ç—é–º –Ω–µ –¥–∞–¥—É—Ç—å –∑–∞–º–µ—Ä–∑–Ω—É—Ç–∏ –¥—É–ø—ñüçë'
        elif 5 <= feels_like < 10:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ù—É –¥—É—É—É–∂–µ –ª–µ–≥–µ–Ω—å–∫–∞ –∫—É—Ä—Ç–æ—á–∫–∞ —Ç–æ–±—ñ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–µ –∑–∞–≤–∞–¥–∏—Ç—åüíÅ'
        elif 10 <= feels_like < 15:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –í–∏–≥—É–ª—é—î–º–æ –Ω–æ–≤—ñ –∫—Ä–æ—Å–∏ üëü —Ç–∞ —Ö—É–¥—ñ'
        elif 15 <= feels_like < 20:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ó–Ω—ñ–º–∞–π –Ω–∞—Ñ—ñ–≥ –≤–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥! –ß–∞—Å —Å–ø–æ—Ä—Ç–∏–≤–æ–∫ üëï —Ç–∞ –∫–æ—Ñ—Ç'
        elif 20 <= feels_like < 25:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –°—å–æ–≥–æ–¥–Ω—ñ —à–æ—Ä—Ç–∏–∫–∏ ü©≥ —Ç–∞ –º–∞–π–∫–∞ - –ø–æ—â–µ–±–µ—á–µ —Ç–≤–æ—ó —è–π–∫–∞!'
        elif 25 <= feels_like:
            advice = '<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é</b>‚òùüèª: –ú—ñ–Ω—ñ–º—É–º —à–º–æ—Ç–æ–∫ - –º–∞–∫—Å–∏–º—É–º –∑–∞—Å–º–∞–≥–∏, –∫–∞–±–∞–Ω—á–∏–∫ üåûüèñ'

        res = f'{advice}\n\nüìç–ü–æ–≥–æ–¥–∞ —É - –º. <b>{city}</b> –≤ {time}:00\n{description}.'
            res = f'üå°<i>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è:</i> {temp}¬∞C, <i>–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫:</i> {feels_like}¬∞C. üíß<i>–í–æ–ª–æ–≥—ñ—Å—Ç—å:</i> {humidity} %, üå¨<i>—à–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É</i> {wind_speed} –º/—Å.'

        temp2 = round(response.json()['list'][2]['main']['temp'])
        feels_like2 = round(response.json()['list'][2]['main']['feels_like'])
        humidity2 = response.json()['list'][2]['main']['humidity']
        description2 = response.json()['list'][2]['weather'][0]['description'].capitalize()
        wind_speed2 = round(response.json()['list'][2]['wind']['speed'])
        time2 = response.json()['list'][2]['dt_txt'].split(' ')[1].split(':')[0]
        res2 = f'üìç–ü–æ–≥–æ–¥–∞ —É - –º. <b>{city}</b> –≤ {time2}:00\n{description2}. üå°<i>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è:</i> {temp2}¬∞C, <i>–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫:</i> {feels_like2}¬∞C. üíß<i>–í–æ–ª–æ–≥—ñ—Å—Ç—å:</i> {humidity2} %, üå¨<i>—à–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É</i> {wind_speed2} –º/—Å.'

        temp3 = round(response.json()['list'][4]['main']['temp'])
        feels_like3 = round(response.json()['list'][4]['main']['feels_like'])
        humidity3 = response.json()['list'][4]['main']['humidity']
        description3 = response.json()['list'][4]['weather'][0]['description'].capitalize()
        wind_speed3 = round(response.json()['list'][4]['wind']['speed'])
        time3 = response.json()['list'][4]['dt_txt'].split(' ')[1].split(':')[0]
        res3 = f'üìç–ü–æ–≥–æ–¥–∞ —É - –º. <b>{city}</b> –≤ {time3}:00\n{description3}. üå°<i>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤—ñ—Ç—Ä—è:</i> {temp3}¬∞C, <i>–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫:</i> {feels_like3}¬∞C. üíß<i>–í–æ–ª–æ–≥—ñ—Å—Ç—å:</i> {humidity3} %, üå¨<i>—à–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É</i> {wind_speed3} –º/—Å.'

        final_message = f'{res}\n\n{res2}\n\n{res3}'
    except KeyError:
        final_message = '–ß–µ—Å–Ω–æ, —è —à—É–∫–∞–≤! ü•∫ –ê–ª–µ —Ç–∞–∫–æ–≥–æ –º—ñ—Å—Ç–∞ –Ω–µ–∑–Ω–∞—é üòî'
    except RequestException:
        final_message = '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...ü§Æ'

    return final_message


def main():

    while True:
        try:
            @bot.message_handler(commands=['start'])
            def start(message):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                btn1 = types.KeyboardButton('–¶—É–º–∞–Ω—å')
                btn2 = types.KeyboardButton('–õ—É—Ü—å–∫')
                btn3 = types.KeyboardButton('–†—ñ–≤–Ω–µ')
                btn4 = types.KeyboardButton('–õ—å–≤—ñ–≤')
                btn5 = types.KeyboardButton('–ö–∏—ó–≤')
                btn6 = types.KeyboardButton('–°–≤—ñ—Ç—è–∑—å')
                btn7 = types.KeyboardButton('–î–Ω—ñ–ø—Ä–æ')
                btn8 = types.KeyboardButton('–û–¥–µ—Å–∞')
                markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
                text = f'<b>–ó–¥—Ä–∞—Å—å—Ç—î ü§ö, {message.from_user.first_name}!</b>\n–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ –∞–±–æ –≤–∏–±–µ—Ä–∏ –∑—ñ —Å–ø–∏—Å–∫—É. –Ø –Ω–∞–¥—ñ—à–ª—é —Ç–æ–±—ñ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ ‚òÇÔ∏è'
                bot.send_message(message.chat.id, text, parse_mode='html', reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def mess(message):
                final_message = get_weather(message.text)
                bot.send_message(message.chat.id, final_message, parse_mode='html')

            bot.polling(none_stop=True)

        except KeyboardInterrupt:
            finish = input(
                '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞? Y/N: '
                )
            if finish in ('Y', 'y'):
                print('–î–æ –≤—Å—Ç—Ä–µ—á–∏!')        
            elif finish in ('N', 'n'):
                print('–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å!')

        except Exception as e:
            print(f'–ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}')
            time.sleep(5)


if __name__ == '__main__':
    main()
