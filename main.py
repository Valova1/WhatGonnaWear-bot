import os
import time

from dotenv import load_dotenv
import requests
from requests.exceptions import RequestException
import telebot
from telebot import apihelper, types


load_dotenv()
telegram_token = os.getenv('telegram_token')
weather_token = os.getenv('weather_token')

bot = telebot.TeleBot(telegram_token)
apihelper.proxy = {'https': 'socks5://51.83.2.136:1080'}
URL = 'http://api.openweathermap.org/data/2.5/forecast'


def get_weather(city):
    weather_parameters = {
            'q': city,
            'appid': weather_token,
            'units': 'metric',
            'lang': 'ru'
        }

    try:
        response = requests.get(url=URL, params=weather_parameters)

        temp = round(response.json()['list'][0]['main']['temp'])
        feels_like = round(response.json()['list'][0]['main']['feels_like'])
        humidity = response.json()['list'][0]['main']['humidity']
        description = response.json()['list'][0]['weather'][0]['description'].capitalize()
        wind_speed = round(response.json()['list'][0]['wind']['speed'])
        time = response.json()['list'][0]['dt_txt'].split(' ')[1].split(':')[0]

        if feels_like < -25:
            advice = '–í —Ç–∞–∫–æ–π –º–æ—Ä–æ–∑ –ª—É—á—à–µ —Å–∏–¥–µ—Ç—å –¥–æ–º–∞... –ù—É –∏–ª–∏ –æ—á–µ–Ω—å —Ç–µ–ø–ª–æ –æ–¥–µ–≤–∞—Ç—å—Å—è!'
        elif -25 <= feels_like < -20:
            advice = '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Ç–µ—Ä–º–æ–±–µ–ª—å–µ! –ó–∏–º–∞ –≤—ã–¥–∞–ª–∞—Å—å —Ö–æ–ª–æ–¥–Ω–∞—è...'
        elif -20 <= feels_like < -15:
            advice = '–ü—É—Ö–æ–≤–∏–∫ –∏ —Ç—ë–ø–ª–∞—è –æ–±—É–≤—å - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –í–∞—à–µ–π –ø—Ä–æ–≥—É–ª–∫–∏'
        elif -15 <= feels_like < -10:
            advice = '–¢—ë–ø–ª—ã–π —à–∞—Ä—Ñ –∏ —Å–≤–∏—Ç–µ—Ä –∑–∞–º–µ–Ω—è—Ç –∫—Ä—É–∂–∫—É –≥–æ—Ä—è—á–µ–≥–æ —á–∞—è'
        elif -10 <= feels_like < -5:
            advice = '–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ... –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä—á–∞—Ç–∫–∏ –∏ —à–∞–ø–∫—É!'
        elif -5 <= feels_like < 0:
            advice = '–ü–∞–ª—å—Ç–æ –∏ —Å—Ç–∏–ª—å–Ω—ã–π —à–∞—Ä—Ñ —Å–µ–≥–æ–¥–Ω—è –∫–∞–∫ –Ω–∏–∫–æ–≥–¥–∞ –∫—Å—Ç–∞—Ç–∏!'
        elif 0 <= feels_like < 5:
            advice = '–õ—é–±–∏–º—ã–π —Å–≤–∏—Ç—à–æ—Ç –∏–ª–∏ —Ç—ë–ø–ª—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Å—Ç—é–º –Ω–µ –¥–∞–¥—É—Ç –∑–∞–º–µ—Ä–∑–Ω—É—Ç—å'
        elif 5 <= feels_like < 10:
            advice = '–õ—ë–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç'
        elif 10 <= feels_like < 15:
            advice = '–í—ã–≥—É–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∫–µ–¥—ã –∏ —Ö—É–¥–∏'
        elif 15 <= feels_like < 20:
            advice = '–î–æ–ª–æ–π –≤–µ—Ä—Ö–Ω—é—é –æ–¥–µ–∂–¥—É! –í—Ä–µ–º—è –ª—ë–≥–∫–∏—Ö –ø–∏–¥–∂–∞–∫–æ–≤ –∏ –ø–ª–∞—Ç—å–µ–≤'
        elif 20 <= feels_like < 25:
            advice = '–®–æ—Ä—Ç—ã –∏ –º–∞–π–∫–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä'
        elif 25 <= feels_like:
            advice = '–ú–∏–Ω–∏–º—É–º –æ–¥–µ–∂–¥—ã - –º–∞–∫—Å–∏–º—É–º –∑–∞–≥–∞—Ä–∞'

        res = f'{advice}\n\n–ü–æ–≥–æ–¥–∞ –≤ –≥. {city} –≤ {time}:00\n{description}. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temp}¬∞, –ø–æ –æ—â—É—â–µ–Ω–∏—è–º: {feels_like}¬∞. –í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity} %, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} –º/—Å.'

        temp2 = round(response.json()['list'][2]['main']['temp'])
        feels_like2 = round(response.json()['list'][2]['main']['feels_like'])
        humidity2 = response.json()['list'][2]['main']['humidity']
        description2 = response.json()['list'][2]['weather'][0]['description'].capitalize()
        wind_speed2 = round(response.json()['list'][2]['wind']['speed'])
        time2 = response.json()['list'][2]['dt_txt'].split(' ')[1].split(':')[0]
        res2 = f'–ü–æ–≥–æ–¥–∞ –≤ –≥. {city} –≤ {time2}:00\n{description2}. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temp2}¬∞, –ø–æ –æ—â—É—â–µ–Ω–∏—è–º: {feels_like2}¬∞. –í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity2} %, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed2} –º/—Å.'

        temp3 = round(response.json()['list'][4]['main']['temp'])
        feels_like3 = round(response.json()['list'][4]['main']['feels_like'])
        humidity3 = response.json()['list'][4]['main']['humidity']
        description3 = response.json()['list'][4]['weather'][0]['description'].capitalize()
        wind_speed3 = round(response.json()['list'][4]['wind']['speed'])
        time3 = response.json()['list'][4]['dt_txt'].split(' ')[1].split(':')[0]
        res3 = f'–ü–æ–≥–æ–¥–∞ –≤ –≥. {city} –≤ {time3}:00\n{description3}. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temp3}¬∞, –ø–æ –æ—â—É—â–µ–Ω–∏—è–º: {feels_like3}¬∞. –í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity3} %, —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed3} –º/—Å.'

        final_message = f'{res}\n\n{res2}\n\n{res3}'
    except KeyError:
        final_message = '–ú—ã —á–µ—Å—Ç–Ω–æ –∏—Å–∫–∞–ª–∏, –Ω–æ —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç üòü'
    except RequestException:
        final_message = '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...'

    return final_message


def main():

    while True:
        try:
            @bot.message_handler(commands=['start'])
            def start(message):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                btn1 = types.KeyboardButton('–ú–æ—Å–∫–≤–∞')
                btn2 = types.KeyboardButton('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
                btn3 = types.KeyboardButton('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫')
                btn4 = types.KeyboardButton('–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥')
                btn5 = types.KeyboardButton('–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥')
                btn6 = types.KeyboardButton('–ö–∞–∑–∞–Ω—å')
                btn7 = types.KeyboardButton('–ß–µ–ª—è–±–∏–Ω—Å–∫')
                btn8 = types.KeyboardButton('–û–º—Å–∫')
                btn9 = types.KeyboardButton('–°–∞–º–∞—Ä–∞')
                btn10 = types.KeyboardButton('–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É')
                markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10)
                text = f'<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b>\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞'
                bot.send_message(message.chat.id, text, parse_mode='html', reply_markup=markup)

            @bot.message_handler(content_types=['text'])
            def mess(message):
                final_message = get_weather(message.text)
                bot.send_message(message.chat.id, final_message, parse_mode='html')

            bot.polling(none_stop=True)

        except KeyboardInterrupt:
            finish = input(
                '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞? Y/N: '
                )
            if finish in ('Y', 'y'):
                print('–î–æ –≤—Å—Ç—Ä–µ—á–∏!')        
            elif finish in ('N', 'n'):
                print('–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å!')

        except Exception as e:
            print(f'–ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e}')
            time.sleep(5)


if __name__ == '__main__':
    main()
